
---------------------------------------------------------------
输入3句代码：
>>> from maze import *          # 引入这个py文件
>>> maze = Maze('maze_1.txt')   # 实例化类Maze，即就是调用Maze这个类，并从指定文本中读取数字 (注意Maze这个类中需要参数)
>>> maze.analyse()              # 调用Maze这个类中的analyse函数，其实就是调用函数 (注意analyse这个函数中不需要参数)

得到结果：（对于 maze_1.txt 这个txt文件）
The maze has 12 gates.
# 这个迷宫有12个入口

The maze has 8 sets of walls that are all connected.
# 这个迷宫有8面墙，即蓝色连线的一共有8个

The maze has 2 inaccessible inner points.
# 这个迷宫无法进入的地方里面的点的数量有2个

The maze has 4 accessible areas.
# 这个迷宫有4个出入口
# 出入口定义：从一个入口进去，可以从另一个不同的入口出来
# 此处有交集的出入口算作一个
# 例如现在有3个出入口，并且他们之间的路线有重叠，那么它们算作一个出入口

The maze has 3 sets of accessible cul-de-sacs that are all connected.
# 这个迷宫有3个死胡同，即红叉部分的一共有3个

The maze has a unique entry-exit path with no intersection not to cul-de-sacs.
# 这个迷宫有唯一1个和其他出入口没有交集的出入口，即黄色的线有1条
# 可以将这里的path理解为通路，独立的通路
# (若现在有2个出入口，但是他们之间的路线有重叠，那么这两个出入口就不能作为黄色的线)



---------------------------------------------------------------
再次输入一行代码
>>> maze.display()  # 调用Maze这个类中的display函数，其实就是调用函数 (注意display这个函数中不需要参数)

得到结果：
出来一张pdf，pdf上是一个迷宫，迷宫里面有各种线段，点，叉 （详见assignment里面的pdf示例）

注意：
这里还有额外要求，也就是仅调用display()这个函数，不调用analyse()，
需要生成一个pdf，但不需要生成或打印处其他信息
也就是输入下面两行代码：
>>> maze = Maze('maze_1.txt')
>>> maze.display()
将会生成tex文件，打开tex文件，运行后能生成一个pdf文件


===============================================================
其他要求：
0. 要有生成错误信息的功能，也就是创建自定义异常
1. txt文本中出现的数字只能是{0, 1, 2, 3}中任意一个
2. 迷宫最小为 2*2，最大为 31*41
3. 文本中的每行的数字的总个数应该一样
4. 文本中的最下面的元素只能为0或1，最右边的元素只能为0或2
5. 打印出的格式共有3种类型（no, unique, N）
6. 作图有一定的要求
